spawn(function()
    repeat wait() until game:IsLoaded()
        wait(60)
        -- auto tp to fishing area
        spawn(function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(-180.852783203125, 117.92350006103516, 5175.45703125)
            wait(3)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(1451.55115, 66.0670776, -4446.53857, 0.266156971, -1.72404135e-09, -0.963929713, -2.23902874e-09, 1, -2.4067881e-09, 0.963929713, 2.79884982e-09, 0.266156971)
        end)

        -- auto fish
        spawn(function()
            function autoFishA()
                while task.wait() do
                    local x = math.random(10, 20)
                    local z = math.random(10, 20)

                    local argsCast = {
                        [1] = "AdvancedFishing",
                        [2] = "RequestCast",
                        [3] = Vector3.new(1470.6005859375, 61.6249885559082, -4448.0107421875) + Vector3.new(x, 0, z)
                    }

                    game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(argsCast))
                    task.wait(3.5)

                    local argsReel = {
                        [1] = "AdvancedFishing",
                        [2] = "RequestReel"
                    }

                    game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(argsReel))
                    repeat
                        task.wait()

                        local hasFishingLine = false
                        for _, descendant in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                            if descendant.Name == "FishingLine" then
                                hasFishingLine = true
                                break
                            end
                        end

                        if not hasFishingLine then
                            break
                        end

                        local argsClicked = {
                            [1] = "AdvancedFishing",
                            [2] = "Clicked"
                        }

                        game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(
                            unpack(argsClicked)
                        )
                    until not hasFishingLine
                    task.wait()
                end
            end
            spawn(autoFishA)
                wait()
                    print("AutoFishEnabled")
        end)

        -- Auto collect hidden presents
        spawn(function()
            local Lib = require(game.ReplicatedStorage.Library.Client)

            function CollectPresent(Id)
                return Lib.Network.Invoke("Hidden Presents: Found", Id)
            end

            function Round6(number)
                local roundedNumber = math.floor(number * 10^6 + 0.5) / 10^6
                return string.format("%.6f", roundedNumber)
            end

            function GetPresents()
                for i, Present in pairs(game.Workspace.__THINGS:WaitForChild("HiddenPresents"):GetChildren()) do
                    if Present.Name == "HiddenPresent" then
                        local Id = "ID_"..tostring(Round6(Present.CFrame.x)).."_"..tostring(Round6(Present.CFrame.y)).."_"..tostring(Round6(Present.CFrame.z))
                        local x,y,z = CollectPresent(Id)
                        Present:Destroy()
                    end
                end
            end

            spawn(function()
                while task.wait(1) do
                    GetPresents()
                end    
            end)
        end)

        -- antiafk
        spawn(function()
            function AutoRejoinWhenKicked()
                game.Players.PlayerRemoving: connect (function (plr)
                    if plr == game.Players.LocalPlayer then
                      game:GetService('TeleportService'):Teleport(game.PlaceId)
                    end
                end)
            end

            function antiAFK()
                local VirtualInputManager = game:GetService("VirtualInputManager")
                while task.wait() do
                    VirtualInputManager:SendKeyEvent(true, "Space", false, game)
                    task.wait(.2)
                    VirtualInputManager:SendKeyEvent(false, "Space", false, game)
                    task.wait(300)
                end
            end
            
            function antiAFKN()
                local vu = game:GetService("VirtualUser")
                game:GetService("Players").LocalPlayer.Idled:connect(
                    function()
                        vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                        wait(1)
                        vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                    end)
            end

            spawn(AutoRejoinWhenKicked)
            spawn(antiAFK)
            spawn(antiAFKN)
        end)

        -- disable 3d rendering
        spawn(function()
            game:GetService("RunService"):Set3dRenderingEnabled(false)
        end)
end)
